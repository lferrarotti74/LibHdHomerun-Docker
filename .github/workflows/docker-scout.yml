name: Docker Scout

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      # Documentation files
      - '*.md'
      - 'docs/**'
      - '.github/**/*.md'
      
      # License and legal files
      - 'LICENSE*'
      - 'COPYING*'
      - 'COPYRIGHT*'
      
      # Git and GitHub specific files
      - '.gitignore'
      - '.gitattributes'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/PULL_REQUEST_TEMPLATE/**'
      - '.github/dependabot.yml'
      - '.github/CODEOWNERS'
      
      # Editor and IDE files
      - '.vscode/**'
      - '.idea/**'
      - '*.swp'
      - '*.swo'
      - '*~'
      
      # Package manager files that don't affect builds
      - '.npmignore'
      - '.dockerignore'
      - '.eslintignore'
      - '.prettierignore'
      
      # CI/CD configuration for other systems
      - '.travis.yml'
      - '.circleci/**'
      - 'Jenkinsfile'
      - '.gitlab-ci.yml'
      
      # Common non-code files
      - '*.txt'
      - 'CHANGELOG*'
      - 'CONTRIBUTING*'
      - 'AUTHORS*'
      - 'MAINTAINERS*'

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}
  SHA: ${{ github.event.pull_request.head.sha || github.event.after }}
  # Using `latest` as the tag to compare assuming that it's already pushed
  COMPARE_TAG: latest

jobs:
  build:
    # if: github.actor!= 'dependabot[bot]'   # ignore the pull request which comes from user dependabot.

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v5.2.0
        with:
          ref: ${{ env.SHA }}

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
        with:
          driver-opts: |
            image=moby/buildkit:v0.10.6

      # Login against a Docker registry except on PR
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.revision=${{ env.SHA }}
          tags: |
            type=edge,branch=$repo.default_branch
            type=semver,pattern=v{{version}}
            type=sha,prefix=,suffix=,format=short
      
      # set lower case image name
      - name: set lower case owner name
        run: |
          echo "IMAGE_LC=${IMAGE,,}" >>${GITHUB_ENV}
        env:
          IMAGE: '${{ github.repository }}'

      # Build and push Docker image with Buildx (don't push on PR)
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # cache-from: type=gha
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_LC }}:buildcache
          # cache-to: type=gha,mode=max
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_LC }}:buildcache,mode=max

      - name: Docker Scout
        id: docker-scout
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/scout-action@e0c2b4b6b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0 # v1
        with:
          command: cves,recommendations,compare
          image: ${{ steps.meta.outputs.tags }}
          to: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.COMPARE_TAG }}
          ignore-base: true
          ignore-unchanged: true
          only-severities: critical,high,medium
          only-fixed: true
          write-comment: true
          github-token: ${{ secrets.GITHUB_TOKEN }} # to be able to write the comment
